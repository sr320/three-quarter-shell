{
  "hash": "44d161bfecbdc8fd474fe2281a1bda2a",
  "result": {
    "markdown": "---\ntitle: \"Going forward?\"\nauthor: \"Steven Roberts\"\ndate: \"2023-02-17\"\ncategories: [news, code, analysis]\nimage: \"image.jpg\"\n---\n\n\nHere I start to examine the deep dive effort, looking first at the quality of the genome.. P verr.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n:::\n\n\nBismark + was done on Hyak.\n\nGenmome stats\n\n\n::: {.cell}\n\n```{.r .cell-code}\nkt <- read.csv(\"https://raw.githubusercontent.com/urol-e5/deep-dive/main/A-Pver/data/Pver-karytotype.tab\", header = FALSE, sep = \"\\t\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nknitr::kable(head(kt))\n```\n\n::: {.cell-output-display}\n|V1                |      V2|\n|:-----------------|-------:|\n|JAAVTL010000001.1 | 2095917|\n|JAAVTL010000002.1 | 2081954|\n|JAAVTL010000003.1 | 1617595|\n|JAAVTL010000004.1 | 1576134|\n|JAAVTL010000005.1 | 1560107|\n|JAAVTL010000006.1 | 1451149|\n:::\n:::\n\n\nThere are 18268 scaffolds\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnrow(kt)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 18268\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(kt, aes(x = V2)) +\n  geom_histogram(bins = 100) +\n  scale_x_log10()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(kt, aes(x = V2)) +\n  geom_histogram(bins = 100) +\n  xlim(0, 5000)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nknitr::kable(kt %>% filter(V2 < 1000) %>% count())\n```\n\n::: {.cell-output-display}\n|    n|\n|----:|\n| 6544|\n:::\n:::\n\n\nFirst thing I want to do is do a simple histogram showing distribution of methylation levels. This will likely be done by taking 10 bedgraphs and concatenating then, making a histogram.\n\nAfter that I would want to look at distribution across features..\n\n## \n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}